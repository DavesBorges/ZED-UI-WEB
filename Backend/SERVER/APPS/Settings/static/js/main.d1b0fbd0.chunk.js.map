{"version":3,"sources":["logo.png","LeftPanel/PanelButton/PanelButton.js","LeftPanel/LeftPanel.js","SettingContext/settingContext.js","index.js"],"names":["module","exports","__webpack_require__","p","PanelButton","_this","this","isActive","key","props","buttonKey","active","react_default","a","createElement","onClick","e","switchSetting","className","title","React","Component","LeftPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","menus","MenusTitles","_this2","finalRender","map","item","id","LeftPanel_PanelButton_PanelButton","CurrentSettingID","style","background-color","settingContext","children","App","SettingJSON","Wallpapers","SystemInfo","OperatingSystem","CPU","Version","Kernel","RAM","STORAGE","changeBlueFilter","bind","assertThisInitialized","getSettingsData","save","changeColorWallpaper","changeAutoGradient","changeGradient","changeBing","changeColor0","changeColor1","changeWallpaper","tmpSettings","setting_wallpaperURL","replace","entries","length","fetch","window","location","hostname","method","body","JSON","stringify","then","response","json","setState","jsonWallpapers","newWallpapers","WALLPAPERS","forEach","element","push","event","obj","target","value","checked","img","src","_this3","SettingsScreens","wallpaper","index","toString","includes","margin","filter","border","width","height","float","backgroundColor","setting_wallpaperColor","setting_bingWallpaper","type","onChange","setting_systemColor0","setting_systemColor1","setting_gradientEffect","setting_autoGradientEffect","setting_blueFilter","ZED_LOGO","marginRight","padding","color","size","marginTop","disabled","src_LeftPanel_LeftPanel","src_SettingContext_settingContext","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.d1b0fbd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5ce55483.png\";","import React from \"react\";\nimport \"./PanelButton.css\";\n\nclass PanelButton extends React.Component {\n  render() {\n    let isActive = \"PanelButton\";\n    const key = this.props.buttonKey;\n    if (this.props.active) {\n      isActive = \"PanelButtonActive\";\n    }\n    return (\n      <div key={key} onClick={e => this.props.switchSetting(key)} className={isActive}>\n        {this.props.title}\n      </div>\n    );\n  }\n}\n\nexport default PanelButton;\n","import React from \"react\";\nimport PanelButton from \"./PanelButton/PanelButton\";\nimport \"./LeftPanel.css\";\n\nclass LeftPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: this.props.MenusTitles\n    };\n  }\n  render() {\n    const finalRender = this.props.MenusTitles.map((item, key) => {\n      const id = key;\n      return (\n        <PanelButton\n          active={id === this.props.CurrentSettingID ? true : false}\n          switchSetting={this.props.switchSetting}\n          style={{ \"background-color\": \"red\" }}\n          buttonKey={id}\n          title={item}\n        />\n      );\n    });\n    return <div className=\"LeftPanel\">{finalRender}</div>;\n  }\n}\n\nexport default LeftPanel;\n","import React from \"react\";\nimport \"./settingContext.css\";\n\nclass settingContext extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"settingTitle\">\n          <h2>\n            <i>{this.props.title}</i>\n          </h2>\n        </div>\n        <div className=\"SettingArea\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default settingContext;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LeftPanel from \"./LeftPanel/LeftPanel.js\";\nimport SettingContext from \"./SettingContext/settingContext.js\";\nimport ZED_LOGO from \"./logo.png\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentSettingID: 0,\n      SettingJSON: {},\n      Wallpapers: [],\n      SystemInfo: {\n        OperatingSystem: \"ZED\",\n        CPU: \"Intel Core i3 2.2GHz\",\n        Version: \"2019.0\",\n        Kernel: \"5.0.1\",\n        RAM: \"3.8GB\",\n        STORAGE: \"1TB\"\n      }\n    };\n    this.changeBlueFilter = this.changeBlueFilter.bind(this);\n    this.getSettingsData = this.getSettingsData.bind(this);\n    this.save = this.save.bind(this);\n    this.changeColorWallpaper = this.changeColorWallpaper.bind(this);\n    this.changeAutoGradient = this.changeAutoGradient.bind(this);\n    this.changeGradient = this.changeGradient.bind(this);\n    this.changeBing = this.changeBing.bind(this);\n    this.changeColor0 = this.changeColor0.bind(this);\n    this.changeColor1 = this.changeColor1.bind(this);\n    this.changeWallpaper = this.changeWallpaper.bind(this);\n    this.switchSetting = this.switchSetting.bind(this);\n\n    this.getSettingsData();\n  }\n\n  save() {\n    // Make JSON Settings compatible with ZED\n    let tmpSettings = this.state.SettingJSON;\n    tmpSettings.setting_wallpaperURL = this.state.SettingJSON.setting_wallpaperURL.replace(\n      /^.*[\\\\\\/]/,\n      \"\"\n    );\n    if (Object.entries(tmpSettings).length > 0) {\n      fetch(\n        \"http://\" +\n          window.location.hostname +\n          \":3031/API/SYSTEM/SETTINGS/USER/setSettings.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify(this.state.SettingJSON)\n        }\n      );\n    }\n  }\n\n  getSettingsData() {\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/getSettings.php\"\n    )\n      .then(response => response.json())\n      .then(json => {\n        this.setState({ SettingJSON: json });\n        fetch(\n          \"http://\" +\n            window.location.hostname +\n            \":3031/API/SYSTEM/SETTINGS/USER/SETTING/getWallpapers.php\"\n        )\n          .then(response => response.json())\n          .then(jsonWallpapers => {\n            let newWallpapers = [\"\"];\n            jsonWallpapers.WALLPAPERS.forEach(element => {\n              if (element !== \"\") {\n                newWallpapers.push(\n                  \"http://\" +\n                    window.location.hostname +\n                    \":3031/Wallpapers/\" +\n                    element\n                );\n              }\n            });\n            this.setState({ Wallpapers: newWallpapers });\n          });\n      });\n  }\n\n  switchSetting(id) {\n    this.setState({ CurrentSettingID: id });\n    this.save();\n  }\n\n  changeColor0(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_systemColor0\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeColor1(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_systemColor1\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeBing(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_bingWallpaper\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeGradient(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_gradientEffect\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeAutoGradient(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_autoGradientEffect\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeBlueFilter(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_blueFilter\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeColorWallpaper(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_wallpaperColor\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeWallpaper(img) {\n    let obj = this.state.SettingJSON;\n    if (img.target.src) {\n      obj[\"setting_wallpaperURL\"] = img.target.src;\n    } else {\n      obj[\"setting_wallpaperURL\"] = \"\";\n    }\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  render() {\n    const SettingsScreens = [\n      <div>\n        <h2>Background</h2>\n        <div>\n          {this.state.Wallpapers.map((wallpaper, index) => {\n            if (wallpaper !== \"\") {\n              return (\n                <img\n                  onClick={this.changeWallpaper}\n                  style={\n                    wallpaper\n                      .toString()\n                      .includes(this.state.SettingJSON.setting_wallpaperURL)\n                      ? {\n                          margin: \"4\",\n                          filter: \"grayscale(100%)\",\n                          border: \"1px solid #ddd\"\n                        }\n                      : { margin: \"4\" }\n                  }\n                  width=\"150\"\n                  height=\"100\"\n                  src={wallpaper}\n                  key={index}\n                />\n              );\n            } else {\n              let border =\n                this.state.SettingJSON.setting_wallpaperURL === \"\"\n                  ? \"1px solid #ddd\"\n                  : \"\";\n              return (\n                <div\n                  onClick={this.changeWallpaper}\n                  style={{\n                    margin: \"4\",\n                    border: border,\n                    width: 150,\n                    height: 100,\n                    float: \"left\",\n                    backgroundColor: this.state.SettingJSON\n                      .setting_wallpaperColor\n                  }}\n                />\n              );\n            }\n          })}\n          <p>\n            Use Bing wallpaper{\" \"}\n            <input\n              onClick={this.changeBing}\n              checked={this.state.SettingJSON.setting_bingWallpaper}\n              type=\"checkbox\"\n            />\n          </p>\n          {this.state.SettingJSON.setting_wallpaperURL === \"\" ? (\n            <p>\n              Background color{\" \"}\n              <input\n                onChange={this.changeColorWallpaper}\n                value={this.state.SettingJSON.setting_wallpaperColor}\n                type=\"color\"\n              />\n            </p>\n          ) : null}\n        </div>\n        <br />\n        <h2>Colors</h2>\n        <p>\n          Main System color{\" \"}\n          <input\n            onChange={this.changeColor0}\n            value={this.state.SettingJSON.setting_systemColor0}\n            type=\"color\"\n          />\n        </p>\n        <p>\n          Second System color{\" \"}\n          <input\n            onChange={this.changeColor1}\n            value={this.state.SettingJSON.setting_systemColor1}\n            type=\"color\"\n          />\n        </p>\n        <p>\n          Use Gradient Effect{\" \"}\n          <input\n            onClick={this.changeGradient}\n            checked={this.state.SettingJSON.setting_gradientEffect}\n            type=\"checkbox\"\n          />\n        </p>\n        <p>\n          Use Auto Gradient by wallpaper{\" \"}\n          <input\n            onClick={this.changeAutoGradient}\n            checked={this.state.SettingJSON.setting_autoGradientEffect}\n            type=\"checkbox\"\n          />\n        </p>\n        <p>\n          Blue Ligth Filter{\" \"}\n          <input\n            onClick={this.changeBlueFilter}\n            checked={this.state.SettingJSON.setting_blueFilter}\n            type=\"checkbox\"\n          />\n        </p>\n      </div>,\n      <div>Not implemented</div>,\n      <div>Not implemented</div>,\n      <div>Not implemented</div>,\n      <div>\n        <img\n          src={ZED_LOGO}\n          width=\"54\"\n          height=\"54\"\n          style={{ float: \"left\", marginRight: \"12px\" }}\n        />\n        <div style={{ padding: \"10px\" }}>\n          <b> ZED </b>\n          <font color=\"red\">XP</font>\n          <br />\n          <font size=\"5px\">BUILD: 0</font>\n          <div style={{ marginTop: 20 }}>\n            <table>\n              <tr>Software</tr>\n              <tr>\n                <th>O.S:</th>\n                <th>{this.state.SystemInfo.OperatingSystem}</th>\n              </tr>\n              <tr>\n                <th>Version:</th>\n                <th>{this.state.SystemInfo.Version}</th>\n              </tr>\n              <tr>\n                <th>Linux Kernel:</th>\n                <th>{this.state.SystemInfo.Kernel}</th>\n              </tr>\n              <tr style={{ height: 22 }} />\n              <tr>Hardware:</tr>\n              <tr>\n                <th style={{ width: 130 }}>CPU:</th>\n                <th>{this.state.SystemInfo.CPU}</th>\n              </tr>\n              <tr>\n                <th>Memory:</th>\n                <th>{this.state.SystemInfo.RAM}</th>\n              </tr>\n              <tr>\n                <th>Storage:</th>\n                <th>{this.state.SystemInfo.STORAGE}</th>\n              </tr>\n            </table>\n          </div>\n          <br />\n          <div>\n            <h2>System Updates</h2>\n            <button disabled>Check and install Updates</button>\n          </div>\n        </div>\n      </div>\n    ];\n    const MenusTitles = [\n      \"Appeaarence\",\n      \"Sound and Screen\",\n      \"Network\",\n      \"Users\",\n      \"System\"\n    ];\n    return (\n      <div className=\"App\">\n        <div className=\"settingTable\">\n          <LeftPanel\n            switchSetting={this.switchSetting}\n            MenusTitles={MenusTitles}\n            CurrentSettingID={this.state.CurrentSettingID}\n          />\n          <SettingContext title={MenusTitles[this.state.CurrentSettingID]}>\n            {SettingsScreens[this.state.CurrentSettingID]}\n          </SettingContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}
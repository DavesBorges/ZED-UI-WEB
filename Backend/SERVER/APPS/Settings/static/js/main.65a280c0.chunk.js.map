{"version":3,"sources":["logo.png","LeftPanel/PanelButton/PanelButton.js","LeftPanel/LeftPanel.js","SettingContext/settingContext.js","Screens/Appearance.js","Screens/System.js","Screens/SoundScreen.js","Screens/Network.js","Screens/Users.js","index.js"],"names":["module","exports","__webpack_require__","p","PanelButton","_this","this","isActive","key","props","buttonKey","active","react_default","a","createElement","onClick","e","switchSetting","className","title","React","Component","LeftPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","menus","MenusTitles","_this2","finalRender","map","item","id","LeftPanel_PanelButton_PanelButton","CurrentSettingID","style","background-color","settingContext","children","Appearance","Wallpapers","wallpaper","index","draggable","changeWallpaper","toString","includes","SettingJSON","setting_wallpaperURL","margin","filter","border","width","height","src","float","backgroundColor","setting_wallpaperColor","value","videoWallpaperURL","name","onChange","onChangeVideoWallpaper","Videos","video","changeColorWallpaper","type","changeColor0","setting_systemColor0","changeColor1","setting_systemColor1","changeGradient","checked","setting_gradientEffect","changeAutoGradient","setting_autoGradientEffect","changeBlueFilter","setting_blueFilter","System","alt","ZED_LOGO","marginRight","padding","color","size","marginTop","SystemInfo","OperatingSystem","Version","Kernel","CPU","RAM","STORAGE","setBranch","SoundScreen","Network","Users","App","currentID","myParam","URLSearchParams","window","location","search","get","branch","undefined","bind","assertThisInitialized","getSettingsData","save","changeBing","target","setState","fetch","hostname","method","body","JSON","stringify","tmpSettings","replace","entries","length","then","response","json","jsonWallpapers","newWallpapers","WALLPAPERS","forEach","element","push","text","event","obj","img","SettingsScreens","Screens_Appearance","changeColor2","SoundScreen_SoundScreen","Network_Network","Users_Users","System_System","src_LeftPanel_LeftPanel","src_SettingContext_settingContext","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.65a280c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5ce55483.png\";","import React from \"react\";\nimport \"./PanelButton.css\";\n\nclass PanelButton extends React.Component {\n  render() {\n    let isActive = \"PanelButton\";\n    const key = this.props.buttonKey;\n    if (this.props.active) {\n      isActive = \"PanelButtonActive\";\n    }\n    return (\n      <div key={key} onClick={e => this.props.switchSetting(key)} className={isActive}>\n        {this.props.title}\n      </div>\n    );\n  }\n}\n\nexport default PanelButton;\n","import React from \"react\";\nimport PanelButton from \"./PanelButton/PanelButton\";\nimport \"./LeftPanel.css\";\n\nclass LeftPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: this.props.MenusTitles\n    };\n  }\n  render() {\n    const finalRender = this.props.MenusTitles.map((item, key) => {\n      const id = key;\n      return (\n        <PanelButton\n          active={id === this.props.CurrentSettingID ? true : false}\n          switchSetting={this.props.switchSetting}\n          style={{ \"background-color\": \"red\" }}\n          buttonKey={id}\n          title={item}\n        />\n      );\n    });\n    return <div className=\"LeftPanel\">{finalRender}</div>;\n  }\n}\n\nexport default LeftPanel;\n","import React from \"react\";\nimport \"./settingContext.css\";\n\nclass settingContext extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"settingTitle\">\n          <h2>\n            <i>{this.props.title}</i>\n          </h2>\n        </div>\n        <div className=\"SettingArea\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default settingContext;\n","import React from 'react';\n\n\nclass Appearance extends React.Component {\n    render(){\n        return(\n            <div>\n                <h2>Background</h2>\n                <div>\n                {this.props.Wallpapers.map((wallpaper, index) => {\n                    if(wallpaper !== \"\") {\n                    return (\n                        <img\n                        draggable=\"false\"\n                        onClick={this.props.changeWallpaper}\n                        style={\n                            wallpaper\n                            .toString()\n                            .includes(this.props.SettingJSON.setting_wallpaperURL)\n                            ? {\n                                margin: \"4\",\n                                filter: \"grayscale(100%)\",\n                                border: \"1px solid #ddd\"\n                                }\n                            : { margin: \"4\" }\n                        }\n                        width=\"150\"\n                        height=\"100\"\n                        src={wallpaper}\n                        key={index}\n                        />\n                    );\n                    } else {\n                    let border =\n                        this.props.SettingJSON.setting_wallpaperURL === \"\"\n                        ? \"1px solid #ddd\"\n                        : \"\";\n                    return (\n                        <div\n                        onClick={this.props.changeWallpaper}\n                        style={{\n                            margin: \"4\",\n                            border: border,\n                            width: 150,\n                            height: 100,\n                            float: \"left\",\n                            backgroundColor: this.props.SettingJSON.setting_wallpaperColor\n                        }}\n                        />\n                    );\n                    }\n                })}\n                <p>Video Wallpaper: \n                    <select value={this.props.SettingJSON.videoWallpaperURL} name=\"video\" onChange={this.onChangeVideoWallpaper}>\n                    <option value=\"Disabled\">Disabled</option>\n                    {this.props.Videos.map((video, index) => {\n                        if(video!==\"\"){\n                        return (<option id={index} value={video}>{video}</option>);\n                        }\n                    })}\n                    </select>\n                </p>\n                {this.props.SettingJSON.setting_wallpaperURL === \"\" ? (\n                    <p>\n                    Background color{\" \"}\n                    <input\n                        onChange={this.props.changeColorWallpaper}\n                        value={this.props.SettingJSON.setting_wallpaperColor}\n                        type=\"color\"\n                    />\n                    </p>\n                ) : null}\n                </div>\n                <br />\n                <h2>Colors</h2>\n                <p>\n                Main System color{\" \"}\n                <input\n                    onChange={this.props.changeColor0}\n                    value={this.props.SettingJSON.setting_systemColor0}\n                    type=\"color\"\n                />\n                </p>\n                <p>\n                Second System color{\" \"}\n                <input\n                    onChange={this.props.changeColor1}\n                    value={this.props.SettingJSON.setting_systemColor1}\n                    type=\"color\"\n                />\n                </p>\n                <p>\n                Use Gradient Effect{\" \"}\n                <input\n                    onClick={this.props.changeGradient}\n                    checked={this.props.SettingJSON.setting_gradientEffect}\n                    type=\"checkbox\"\n                />\n                </p>\n                <p>\n                Use Auto Gradient by wallpaper{\" \"}\n                <input\n                    onClick={this.props.changeAutoGradient}\n                    checked={this.props.SettingJSON.setting_autoGradientEffect}\n                    type=\"checkbox\"\n                />\n                </p>\n                <p>\n                Blue Ligth Filter{\" \"}\n                <input\n                    onClick={this.props.changeBlueFilter}\n                    checked={this.props.SettingJSON.setting_blueFilter}\n                    type=\"checkbox\"\n                />\n                </p>\n            </div>            \n        );\n    }\n}\n\nexport default Appearance;","import React from 'react';\nimport ZED_LOGO from \"../logo.png\";\n\nexport default class System extends React.Component {\n    render(){\n        return(\n        <div>\n            <img\n                alt=\"\"\n                draggable=\"false\"\n                src={ZED_LOGO}\n                width=\"54\"\n                height=\"54\"\n                style={{ float: \"left\", marginRight: \"12px\" }}\n            />\n            <div style={{ padding: \"10px\" }}>\n            <b> ZED </b>\n            <font color=\"red\">XP</font>\n            <br />\n            <font size=\"5px\">BUILD: 0</font>\n            <div style={{ marginTop: 20 }}>\n                <table>\n                <tr>Software</tr>\n                <tr>\n                    <th>O.S:</th>\n                    <th>{this.props.SystemInfo.OperatingSystem}</th>\n                </tr>\n                <tr>\n                    <th>Version:</th>\n                    <th>{this.props.SystemInfo.Version}</th>\n                </tr>\n                <tr>\n                    <th>Linux Kernel:</th>\n                    <th>{this.props.SystemInfo.Kernel}</th>\n                </tr>\n                <tr style={{ height: 22 }} />\n                <tr>Hardware:</tr>\n                <tr>\n                    <th style={{ width: 130 }}>CPU:</th>\n                    <th>{this.props.SystemInfo.CPU}</th>\n                </tr>\n                <tr>\n                    <th>Memory:</th>\n                    <th>{this.props.SystemInfo.RAM}</th>\n                </tr>\n                <tr>\n                    <th>Storage:</th>\n                    <th>{this.props.SystemInfo.STORAGE}</th>\n                </tr>\n                </table>\n            </div>\n            <br />\n            <div>\n                <h2>System Updates</h2>\n                Which development branch would you like to use? <br/><br/>\n                <select value={\"Select Branch\"} id=\"branch\" onChange={this.props.setBranch}>\n                <option value=\"\">Select Branch</option>\n                <option value=\"master\">master</option>\n                <option value=\"develop\">develop</option>\n                </select>\n            </div>\n            </div>\n        </div>\n      );\n    }\n}","import React from 'react';\n\nexport default class SoundScreen extends React.Component {\n    render(){\n        return(\n            <div>Not implemented</div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Network extends React.Component {\n    render(){\n        return(\n            <div>Not implemented</div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Users extends React.Component {\n    render(){\n        return(\n            <div>Not implemented</div>\n        )\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LeftPanel from \"./LeftPanel/LeftPanel.js\";\nimport SettingContext from \"./SettingContext/settingContext.js\";\nimport Screen_appearance from './Screens/Appearance';\nimport Screen_system from './Screens/System';\nimport Screen_soundScreen from './Screens/SoundScreen'\nimport Screen_network from './Screens/Network'\nimport Screen_users from './Screens/Users'\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let currentID=0;\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('id');\n    if(myParam  !== null){\n      currentID=myParam;\n    }\n    this.state = {\n      CurrentSettingID: currentID,\n      SettingJSON: {},\n      Wallpapers: [],\n      branch: \"master\",\n      Videos: [],\n      SystemInfo: {\n        OperatingSystem: \"ZED\",\n        CPU: undefined,\n        Version: \"2019.0\",\n        Kernel: undefined,\n        RAM: undefined,\n        STORAGE: undefined  \n      }\n    };\n    this.changeBlueFilter = this.changeBlueFilter.bind(this);\n    this.getSettingsData = this.getSettingsData.bind(this);\n    this.save = this.save.bind(this);\n    this.changeColorWallpaper = this.changeColorWallpaper.bind(this);\n    this.changeAutoGradient = this.changeAutoGradient.bind(this);\n    this.changeGradient = this.changeGradient.bind(this);\n    this.changeBing = this.changeBing.bind(this);\n    this.changeColor0 = this.changeColor0.bind(this);\n    this.changeColor1 = this.changeColor1.bind(this);\n    this.changeWallpaper = this.changeWallpaper.bind(this);\n    this.switchSetting = this.switchSetting.bind(this);\n    this.onChangeVideoWallpaper = this.onChangeVideoWallpaper.bind(this);\n    this.setBranch = this.setBranch.bind(this);\n  }\n\n  componentWillMount(){\n    this.getSettingsData();\n  }\n\n  setBranch(e){\n    if(e.target.value!==\"\"){\n      this.setState({branch: e.target.value});\n      fetch(\n        \"http://\" +\n          window.location.hostname +\n          \":3031/API/SYSTEM/UPDATES/setUpdateBranch.php?id=\"+e.target.value,\n        {\n          method: \"post\",\n          body: JSON.stringify(this.state.SettingJSON)\n        }\n      );\n    }\n  }\n\n  save() {\n    // Make JSON Settings compatible with ZED\n    let tmpSettings = this.state.SettingJSON;\n    tmpSettings.setting_wallpaperURL = this.state.SettingJSON.setting_wallpaperURL.replace(\n      /^.*[\\\\\\/]/,\n      \"\"\n    );\n    if (Object.entries(tmpSettings).length > 0) {\n      fetch(\n        \"http://\" +\n          window.location.hostname +\n          \":3031/API/SYSTEM/SETTINGS/USER/setSettings.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify(this.state.SettingJSON)\n        }\n      );\n    }\n  }\n\n  getSettingsData() {\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/getSettings.php\"\n    )\n    .then(response => response.json())\n    .then(json => {\n      this.setState({ SettingJSON: json });\n    });\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/SETTING/getWallpapersImages.php\"\n    )\n    .then(response => response.json())\n    .then(jsonWallpapers => {\n      let newWallpapers = [\"\"];\n      jsonWallpapers.WALLPAPERS.forEach(element => {\n        if (element !== \"\") {\n          newWallpapers.push(\n            \"http://\" +\n              window.location.hostname +\n              \":3031/Wallpapers/Images/\" +\n              element\n          );\n        }\n      });\n      this.setState({ Wallpapers: newWallpapers });\n    });\n\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/SETTING/getWallpapersVideos.php\"\n    )\n    .then(response => response.json())\n    .then(jsonWallpapers => {\n      this.setState({ Videos: jsonWallpapers.WALLPAPERS });\n    });\n\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/getInfo.php\"\n    )\n    .then(response => response.json())\n    .then(SystemInfo => {\n      this.setState({ SystemInfo: SystemInfo });\n    });\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/UPDATES/getUpdateBranch.php\"\n    )\n    .then(response => response.text())\n    .then(text => {\n      this.setState({branch: text});  \n    })\n  }\n\n  switchSetting(id) {\n    this.setState({ CurrentSettingID: id });\n    this.save();\n  }\n\n  changeColor0(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_systemColor0\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeColor1(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_systemColor1\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeBing(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_bingWallpaper\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeGradient(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_gradientEffect\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeAutoGradient(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_autoGradientEffect\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  onChangeVideoWallpaper(event){\n    let obj = this.state.SettingJSON;\n    if(event.target.value!==\"Disabled\"){\n      obj[\"videoWallpaperURL\"] = event.target.value;\n    }else{\n      obj[\"videoWallpaperURL\"] = \"\";\n    }\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeBlueFilter(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_blueFilter\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeColorWallpaper(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_wallpaperColor\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeWallpaper(img) {\n    let obj = this.state.SettingJSON;\n    if (img.target.src) {\n      obj[\"setting_wallpaperURL\"] = img.target.src;\n    } else {\n      obj[\"setting_wallpaperURL\"] = \"\";\n    }\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  render() {  \n    let branchIndex=0;\n    if(this.state.branch!==\"master\"){\n      branchIndex=1;\n    }\n    const SettingsScreens = [\n      <Screen_appearance\n        Wallpapers={this.state.Wallpapers}\n        changeWallpaper={this.changeWallpaper}\n        SettingJSON={this.state.SettingJSON}\n        Videos={this.state.Videos}\n        changeColor1={this.changeColor1}\n        changeColor2={this.changeColor2}\n        changeAutoGradient={this.changeAutoGradient}\n        changeBlueFilter={this.changeBlueFilter}\n      />,\n      <Screen_soundScreen />,\n      <Screen_network />,,\n      <Screen_users />,\n      <Screen_system\n        SystemInfo={this.state.SystemInfo}\n        setBranch={this.setBranch}\n      />\n    ];\n    const MenusTitles = [\n      \"Appearence\",\n      \"Sound and Screen\",\n      \"Network\",\n      \"Users\",\n      \"System\"\n    ];\n    return (\n      <div className=\"App\">\n        <div className=\"settingTable\">\n          <LeftPanel\n            switchSetting={this.switchSetting}\n            MenusTitles={MenusTitles}\n            CurrentSettingID={this.state.CurrentSettingID}\n          />\n          <SettingContext title={MenusTitles[this.state.CurrentSettingID]}>\n            {SettingsScreens[this.state.CurrentSettingID]}\n          </SettingContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}
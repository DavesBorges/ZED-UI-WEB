{"version":3,"sources":["logo.png","LeftPanel/PanelButton/PanelButton.js","LeftPanel/LeftPanel.js","SettingContext/settingContext.js","index.js"],"names":["module","exports","__webpack_require__","p","PanelButton","_this","this","isActive","key","props","buttonKey","active","react_default","a","createElement","onClick","e","switchSetting","className","title","React","Component","LeftPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","menus","MenusTitles","_this2","finalRender","map","item","id","LeftPanel_PanelButton_PanelButton","CurrentSettingID","style","background-color","settingContext","children","App","currentID","myParam","URLSearchParams","window","location","search","get","SettingJSON","Wallpapers","branch","Videos","SystemInfo","OperatingSystem","CPU","undefined","Version","Kernel","RAM","STORAGE","changeBlueFilter","bind","assertThisInitialized","getSettingsData","save","changeColorWallpaper","changeAutoGradient","changeGradient","changeBing","changeColor0","changeColor1","changeWallpaper","onChangeVideoWallpaper","setBranch","target","value","setState","fetch","hostname","method","body","JSON","stringify","tmpSettings","setting_wallpaperURL","replace","entries","length","then","response","json","jsonWallpapers","newWallpapers","WALLPAPERS","forEach","element","push","text","event","obj","checked","img","src","_this3","SettingsScreens","wallpaper","index","draggable","toString","includes","margin","filter","border","width","height","float","backgroundColor","setting_wallpaperColor","videoWallpaperURL","name","onChange","video","setting_bingWallpaper","type","setting_systemColor0","setting_systemColor1","setting_gradientEffect","setting_autoGradientEffect","setting_blueFilter","ZED_LOGO","marginRight","padding","color","size","marginTop","src_LeftPanel_LeftPanel","src_SettingContext_settingContext","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.359b34da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5ce55483.png\";","import React from \"react\";\nimport \"./PanelButton.css\";\n\nclass PanelButton extends React.Component {\n  render() {\n    let isActive = \"PanelButton\";\n    const key = this.props.buttonKey;\n    if (this.props.active) {\n      isActive = \"PanelButtonActive\";\n    }\n    return (\n      <div key={key} onClick={e => this.props.switchSetting(key)} className={isActive}>\n        {this.props.title}\n      </div>\n    );\n  }\n}\n\nexport default PanelButton;\n","import React from \"react\";\nimport PanelButton from \"./PanelButton/PanelButton\";\nimport \"./LeftPanel.css\";\n\nclass LeftPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: this.props.MenusTitles\n    };\n  }\n  render() {\n    const finalRender = this.props.MenusTitles.map((item, key) => {\n      const id = key;\n      return (\n        <PanelButton\n          active={id === this.props.CurrentSettingID ? true : false}\n          switchSetting={this.props.switchSetting}\n          style={{ \"background-color\": \"red\" }}\n          buttonKey={id}\n          title={item}\n        />\n      );\n    });\n    return <div className=\"LeftPanel\">{finalRender}</div>;\n  }\n}\n\nexport default LeftPanel;\n","import React from \"react\";\nimport \"./settingContext.css\";\n\nclass settingContext extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"settingTitle\">\n          <h2>\n            <i>{this.props.title}</i>\n          </h2>\n        </div>\n        <div className=\"SettingArea\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default settingContext;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LeftPanel from \"./LeftPanel/LeftPanel.js\";\nimport SettingContext from \"./SettingContext/settingContext.js\";\nimport ZED_LOGO from \"./logo.png\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let currentID=0;\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('id');\n    if(myParam  !== null){\n      currentID=myParam;\n    }\n    this.state = {\n      CurrentSettingID: currentID,\n      SettingJSON: {},\n      Wallpapers: [],\n      branch: \"master\",\n      Videos: [],\n      SystemInfo: {\n        OperatingSystem: \"ZED\",\n        CPU: undefined,\n        Version: \"2019.0\",\n        Kernel: undefined,\n        RAM: undefined,\n        STORAGE: undefined  \n      }\n    };\n    this.changeBlueFilter = this.changeBlueFilter.bind(this);\n    this.getSettingsData = this.getSettingsData.bind(this);\n    this.save = this.save.bind(this);\n    this.changeColorWallpaper = this.changeColorWallpaper.bind(this);\n    this.changeAutoGradient = this.changeAutoGradient.bind(this);\n    this.changeGradient = this.changeGradient.bind(this);\n    this.changeBing = this.changeBing.bind(this);\n    this.changeColor0 = this.changeColor0.bind(this);\n    this.changeColor1 = this.changeColor1.bind(this);\n    this.changeWallpaper = this.changeWallpaper.bind(this);\n    this.switchSetting = this.switchSetting.bind(this);\n    this.onChangeVideoWallpaper = this.onChangeVideoWallpaper.bind(this);\n    this.setBranch = this.setBranch.bind(this);\n  }\n\n  componentWillMount(){\n    this.getSettingsData();\n  }\n\n  setBranch(e){\n    if(e.target.value!==\"\"){\n      this.setState({branch: e.target.value});\n      fetch(\n        \"http://\" +\n          window.location.hostname +\n          \":3031/API/SYSTEM/UPDATES/setUpdateBranch.php?id=\"+e.target.value,\n        {\n          method: \"post\",\n          body: JSON.stringify(this.state.SettingJSON)\n        }\n      );\n    }\n  }\n\n  save() {\n    // Make JSON Settings compatible with ZED\n    let tmpSettings = this.state.SettingJSON;\n    tmpSettings.setting_wallpaperURL = this.state.SettingJSON.setting_wallpaperURL.replace(\n      /^.*[\\\\\\/]/,\n      \"\"\n    );\n    if (Object.entries(tmpSettings).length > 0) {\n      fetch(\n        \"http://\" +\n          window.location.hostname +\n          \":3031/API/SYSTEM/SETTINGS/USER/setSettings.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify(this.state.SettingJSON)\n        }\n      );\n    }\n  }\n\n  getSettingsData() {\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/getSettings.php\"\n    )\n    .then(response => response.json())\n    .then(json => {\n      this.setState({ SettingJSON: json });\n    });\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/SETTING/getWallpapersImages.php\"\n    )\n    .then(response => response.json())\n    .then(jsonWallpapers => {\n      let newWallpapers = [\"\"];\n      jsonWallpapers.WALLPAPERS.forEach(element => {\n        if (element !== \"\") {\n          newWallpapers.push(\n            \"http://\" +\n              window.location.hostname +\n              \":3031/Wallpapers/Images/\" +\n              element\n          );\n        }\n      });\n      this.setState({ Wallpapers: newWallpapers });\n    });\n\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/SETTINGS/USER/SETTING/getWallpapersVideos.php\"\n    )\n    .then(response => response.json())\n    .then(jsonWallpapers => {\n      this.setState({ Videos: jsonWallpapers.WALLPAPERS });\n    });\n\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/getInfo.php\"\n    )\n    .then(response => response.json())\n    .then(SystemInfo => {\n      this.setState({ SystemInfo: SystemInfo });\n    });\n    fetch(\n      \"http://\" +\n        window.location.hostname +\n        \":3031/API/SYSTEM/UPDATES/getUpdateBranch.php\"\n    )\n    .then(response => response.text())\n    .then(text => {\n      this.setState({branch: text});  \n    })\n  }\n\n  switchSetting(id) {\n    this.setState({ CurrentSettingID: id });\n    //this.save();\n  }\n\n  changeColor0(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_systemColor0\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeColor1(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_systemColor1\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeBing(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_bingWallpaper\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeGradient(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_gradientEffect\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeAutoGradient(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_autoGradientEffect\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  onChangeVideoWallpaper(event){\n    let obj = this.state.SettingJSON;\n    if(event.target.value!==\"Disabled\"){\n      obj[\"videoWallpaperURL\"] = event.target.value;\n    }else{\n      obj[\"videoWallpaperURL\"] = \"\";\n    }\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeBlueFilter(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_blueFilter\"] = event.target.checked;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeColorWallpaper(event) {\n    let obj = this.state.SettingJSON;\n    obj[\"setting_wallpaperColor\"] = event.target.value;\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  changeWallpaper(img) {\n    let obj = this.state.SettingJSON;\n    if (img.target.src) {\n      obj[\"setting_wallpaperURL\"] = img.target.src;\n    } else {\n      obj[\"setting_wallpaperURL\"] = \"\";\n    }\n    this.setState({ SettingJSON: obj });\n    this.save();\n  }\n\n  render() {  \n    let branchIndex=0;\n    if(this.state.branch!==\"master\"){\n      branchIndex=1;\n    }\n    const SettingsScreens = [\n      <div>\n        <h2>Background</h2>\n        <div>\n          {this.state.Wallpapers.map((wallpaper, index) => {\n            if(wallpaper !== \"\") {\n              return (\n                <img\n                  draggable=\"false\"\n                  onClick={this.changeWallpaper}\n                  style={\n                    wallpaper\n                      .toString()\n                      .includes(this.state.SettingJSON.setting_wallpaperURL)\n                      ? {\n                          margin: \"4\",\n                          filter: \"grayscale(100%)\",\n                          border: \"1px solid #ddd\"\n                        }\n                      : { margin: \"4\" }\n                  }\n                  width=\"150\"\n                  height=\"100\"\n                  src={wallpaper}\n                  key={index}\n                />\n              );\n            } else {\n              let border =\n                this.state.SettingJSON.setting_wallpaperURL === \"\"\n                  ? \"1px solid #ddd\"\n                  : \"\";\n              return (\n                <div\n                  onClick={this.changeWallpaper}\n                  style={{\n                    margin: \"4\",\n                    border: border,\n                    width: 150,\n                    height: 100,\n                    float: \"left\",\n                    backgroundColor: this.state.SettingJSON\n                      .setting_wallpaperColor\n                  }}\n                />\n              );\n            }\n          })}\n          <p>Video Wallpaper: \n            <select value={this.state.SettingJSON.videoWallpaperURL} name=\"video\" onChange={this.onChangeVideoWallpaper}>\n              <option value=\"Disabled\">Disabled</option>\n              {this.state.Videos.map((video, index) => {\n                if(video!==\"\"){\n                  return (<option id={index} value={video}>{video}</option>);\n                }\n              })}\n            </select>\n          </p>\n          <p>\n            Use Bing wallpaper{\" \"}\n            <input\n              onClick={this.changeBing}\n              checked={this.state.SettingJSON.setting_bingWallpaper}\n              type=\"checkbox\"\n            />\n          </p>\n          {this.state.SettingJSON.setting_wallpaperURL === \"\" ? (\n            <p>\n              Background color{\" \"}\n              <input\n                onChange={this.changeColorWallpaper}\n                value={this.state.SettingJSON.setting_wallpaperColor}\n                type=\"color\"\n              />\n            </p>\n          ) : null}\n        </div>\n        <br />\n        <h2>Colors</h2>\n        <p>\n          Main System color{\" \"}\n          <input\n            onChange={this.changeColor0}\n            value={this.state.SettingJSON.setting_systemColor0}\n            type=\"color\"\n          />\n        </p>\n        <p>\n          Second System color{\" \"}\n          <input\n            onChange={this.changeColor1}\n            value={this.state.SettingJSON.setting_systemColor1}\n            type=\"color\"\n          />\n        </p>\n        <p>\n          Use Gradient Effect{\" \"}\n          <input\n            onClick={this.changeGradient}\n            checked={this.state.SettingJSON.setting_gradientEffect}\n            type=\"checkbox\"\n          />\n        </p>\n        <p>\n          Use Auto Gradient by wallpaper{\" \"}\n          <input\n            onClick={this.changeAutoGradient}\n            checked={this.state.SettingJSON.setting_autoGradientEffect}\n            type=\"checkbox\"\n          />\n        </p>\n        <p>\n          Blue Ligth Filter{\" \"}\n          <input\n            onClick={this.changeBlueFilter}\n            checked={this.state.SettingJSON.setting_blueFilter}\n            type=\"checkbox\"\n          />\n        </p>\n      </div>,\n      <div>Not implemented</div>,\n      <div>Not implemented</div>,\n      <div>Not implemented</div>,\n      <div>\n        <img\n          draggable=\"false\"\n          src={ZED_LOGO}\n          width=\"54\"\n          height=\"54\"\n          style={{ float: \"left\", marginRight: \"12px\" }}\n        />\n        <div style={{ padding: \"10px\" }}>\n          <b> ZED </b>\n          <font color=\"red\">XP</font>\n          <br />\n          <font size=\"5px\">BUILD: 0</font>\n          <div style={{ marginTop: 20 }}>\n            <table>\n              <tr>Software</tr>\n              <tr>\n                <th>O.S:</th>\n                <th>{this.state.SystemInfo.OperatingSystem}</th>\n              </tr>\n              <tr>\n                <th>Version:</th>\n                <th>{this.state.SystemInfo.Version}</th>\n              </tr>\n              <tr>\n                <th>Linux Kernel:</th>\n                <th>{this.state.SystemInfo.Kernel}</th>\n              </tr>\n              <tr style={{ height: 22 }} />\n              <tr>Hardware:</tr>\n              <tr>\n                <th style={{ width: 130 }}>CPU:</th>\n                <th>{this.state.SystemInfo.CPU}</th>\n              </tr>\n              <tr>\n                <th>Memory:</th>\n                <th>{this.state.SystemInfo.RAM}</th>\n              </tr>\n              <tr>\n                <th>Storage:</th>\n                <th>{this.state.SystemInfo.STORAGE}</th>\n              </tr>\n            </table>\n          </div>\n          <br />\n          <div>\n            <h2>System Updates</h2>\n            Which development branch would you like to use? <br/><br/>\n            <select value={\"Select Branch\"} id=\"branch\" onChange={this.setBranch}>\n              <option value=\"\">Select Branch</option>\n              <option value=\"master\">master</option>\n              <option value=\"develop\">develop</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    ];\n    const MenusTitles = [\n      \"Appearence\",\n      \"Sound and Screen\",\n      \"Network\",\n      \"Users\",\n      \"System\"\n    ];\n    return (\n      <div className=\"App\">\n        <div className=\"settingTable\">\n          <LeftPanel\n            switchSetting={this.switchSetting}\n            MenusTitles={MenusTitles}\n            CurrentSettingID={this.state.CurrentSettingID}\n          />\n          <SettingContext title={MenusTitles[this.state.CurrentSettingID]}>\n            {SettingsScreens[this.state.CurrentSettingID]}\n          </SettingContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}